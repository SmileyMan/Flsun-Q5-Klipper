################################################################################
# Pause the print
# Hops the toolhead where possible and moves it to the front
# Z Cone aware and will not movre to thr fron in the delta cone area
# PAUSE [Z=<z hop height (20)>]
################################################################################
[gcode_macro PAUSE]
description: Pauses the currrent print
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    # Message to terminal
    { action_respond_info("Print Pausing") }

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=0                                    ; disable filament sensor
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0                                   ; disable encoder sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.toolhead.position.z +z) < printer.toolhead.cone_start_z -1 %}         ; check that zhop doesn't exceed z cone
            G91                                                                              ; relative positioning
            G1 Z{z} F1000                                                                    ; raise Z up by z hop amount
            G90                                                                              ; absolute positioning
            G0 X0 Y{printer.toolhead.axis_minimum.y +4} F6000                                 ; park toolhead at front center
        {% elif (printer.toolhead.position.z + z) < printer.toolhead.axis_maximum.z %}
            G91                                                                              ; relative positioning                        
            G1 Z1 F1000                                                                      ; z hop 1mm
            G90                                                                              ; absolute positioning
            G0 X0 Y0 F6000                                                                   ; center toolhead
            G91                                                                              ; relative positioning
            G1 Z{z -1} F1000                                                                 ; raise Z up by z hop amount
            G90                                                                              ; absolute positioning                   
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

################################################################################
# Resume the print
# Re-heats hotend and restores gcode state
################################################################################
[gcode_macro RESUME]
description: Resumes the current print after a pause
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    # Message to terminal
    { action_respond_info("Print Resuming") }

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

    SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=1                                ; filiment sensor on
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1                               ; encoder sensor on

